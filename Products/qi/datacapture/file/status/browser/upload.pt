<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      metal:use-macro="context/general/macros/master"
      i18n:domain="Products.qi">
<head metal:fill-slot="javascript_head_slot">
    <script type="text/javascript">
    //<![CDATA[
    var count=0
    function connect()
    {
        if (window.XMLHttpRequest)
        {
            // code for IE7+, Firefox, Chrome, Opera, Safari
            return new XMLHttpRequest();
        }
        if (window.ActiveXObject)
        {
            // code for IE6, IE5
            return new ActiveXObject("Microsoft.XMLHTTP");
        }
        return null;
    }

    function updateinputs(resp)
    {
        if (resp==null)
        {
            return
        }
        element=resp.documentElement
        if (element.nodeName=='file')
        {
            children=element.childNodes
            for(i=0;i<children.length;i++)
            {
                child=children[i]
                if (child.nodeName=='status')
                {
                    
                    statusobj=document.getElementById('status')
                    statusobj.innerHTML=child.childNodes[0].nodeValue
                }
                if (child.nodeName=='errorlevel')
                {
                    problem=document.getElementById('problems')
                    val=child.childNodes[0].nodeValue
                    x=val.replace(/^\s+|\s+$/g,"");
                    num=parseInt(x)
                    problem.value=num>0
                }
                
                if (child.nodeName=='complete')
                {
                    //alert('trying to set complete to'+child.childNodes[0].nodeValue)
                    document.getElementById('complete').value=child.childNodes[0].nodeValue
                }
                /*
                if (child.nodeName=='errors')
                {
                    deletedobj=document.getElementById('errordiv')
                    deletedobj.innerHTML=''
                    newtable=buildTable('Warnings
                }
                if (child.nodeName=='warnings')
                {
                    deletedobj=document.getElementById('warningdiv')
                    deletedobj.innerHTML=''
                }
                */
            }
        }
    }
    
    function updateitems()
    {
        completeval=document.getElementById('complete').value.toLowerCase().indexOf('true')>-1
        problem=document.getElementById('problems').value.toLowerCase().indexOf('true')>-1
        restartitem=document.getElementById('restart')
        if (completeval)
        {
            restartitem.style.display='block'
            if(!problem)
            {
                x=document.getElementById('summary')
                y=document.getElementById('viewdata')
                x.style.display='block'
                y.style.display='block'
            }
            else
            {
                location.reload(true)
            }
            
        }
        
    }
	
	function updatefields()
	{

	    if(client.readyState==4 && client.status==200)
	    {
	        rt=client.responseText
	        responsexml=client.responseXML
	        
	        updateinputs(responsexml)

	        updateitems()
        }
    }
	function runrequest()
	{
	    fileid=document.getElementById('fileid').value;
	    ajaxurl='ajax-filestatus?fileid='+fileid+'&requesttime='+new Date().getTime();
	    count=count+1;
	    client= connect();
	    client.open("GET",ajaxurl,true);
	    client.onreadystatechange=updatefields;
	    client.send(null);
    }
	function doupdate()
	{
	    completeval=document.getElementById('complete').value.toLowerCase().indexOf('true')>-1
	    problems=document.getElementById('problems').value
        //complete=false
        if(!completeval)
	    {
	        runrequest()
	        setTimeout("doupdate()",500)
        }
    }
    window.onload=doupdate
    //]]>
	</script>
</head>

<body>
<div metal:fill-slot="main"
	tal:define="upload view/getUpload" onload="doupdate">
<h2 class="filetitle" tal:content="upload/tracked/displayname" />


<form action="."
	tal:define="
		mainpart view/url;
		formatstring python:'%s?fileid=%i';
		actionval python:formatstring%(mainpart,upload.tracked.id);
		errorlevel view/errorlevel"
	method="POST"
	tal:attributes="action actionval">

<table class="formattable">
    <tr>
        <td>Status:</td> <td> <b id="status" tal:content="upload/status"></b></td>
    </tr>
    <tr>
        <td>Time:</td> <td tal:content="python:view.niceifydt(upload.initiated)"> </td>
    </tr>
</table>
<br />
<div class="uploadstatus" tal:define="
        complete python:errorlevel>-1;
        noerrors python:errorlevel==0;
        warnings python:errorlevel &lt; 6 and errorlevel &gt; 0;
        errors python:errorlevel &gt; 5;
        showthings python:(noerrors or warnings) and complete;">
    <div>
    <form>
        <input type="hidden" id="complete" tal:attributes="value complete" />
        <input type="hidden" id="problems" tal:attributes="value python:noerrors or warnings" />
        <input type="hidden" id="fileid" tal:attributes="value upload/tracked/id" />
    </form>
    <table class="formattable">
        <tr>
            <td>
                Viewing Options
            </td>
            <td>
                <div class="lineitem" id="summary" tal:attributes="style python:'display: %s'%((showthings) and 'block' or 'none')">
                    <a tal:attributes="href python:'datacounts?fileid=%s'%upload.tracked.id">
                        View a summary
                    </a>
                    of the data values imported from this file.
                </div>
                <div class="lineitem" id="viewdata" tal:attributes="style python:'display: %s'%((showthings) and 'block' or 'none')">
                    <a tal:attributes="href python:'viewdata?fileid=%s'%upload.tracked.id">
                        View all data values
                    </a>
                    associated with this file.
                </div>
                <div class="lineitem" >
                    <a tal:attributes="href python:view.download(upload.tracked)">Get a copy</a>
                    of the file that was uploaded.
                </div>
            </td>
        </tr>
        <tr>
            <td colspan="2">
            </td>
        </tr>
        <tr>
            <td>
                Reprocessing Options
            </td>
            <td>
            <div class="lineitem">
                <a tal:attributes="href python:'import.html?replaceid=%s'%upload.tracked.id">
                    Upload and import
                </a>
                a new version of this file.
            </div>
            <div class="lineitem" id="restart" tal:attributes="style python:'display: %s'%(complete and 'block' or 'none')">
                <a tal:attributes="href python:'status?fileid=%s\x26Restart'%upload.tracked.id">
                    Reprocess the data
                </a> 
                without uploading again. 
                This is rarely used, please consult a project manager for clarification.
            </div>
            </td>
        </tr>
    </table>
    </div>
</div>


<div id="detailsection">
<!--	<tal:errortable tal:condition="python:len(upload.uploaderror_set.all().filter(rownum__lt=0))>0">
	<h3>General File Errors:</h3>
		<table class="listing">
			<tr>
			<th>
				Error message
			</th>
			</tr>
			<tal:errors repeat="error python:upload.uploaderror_set.all().filter(rownum__lt=0)">
			<tr>
				<td tal:content="error/message" />
			</tr>
			</tal:errors>
		</table>
	</tal:errortable> -->
	<tal:errortable tal:condition="python:upload and len(upload.uploaderror_set.all().filter(errorlevel__gt=5))>0">
	<h2 style="border-bottom-style: none">Errors:</h2>
	<p class="description">
	    The ﬁle import generated some errors which are listed below. As a result, the ﬁle import was 
        cancelled. <b>These errors must be corrected to import the ﬁle.</b> To correct these values, edit 
        the data ﬁle and upload it again.
    </p>
		<table class="listing">
			<tr>
				<th>
					Row
				</th>
				<th>
					Error message
				</th>
			</tr>
			<tal:errors 
			    repeat="error python:upload.uploaderror_set.all().filter(errorlevel__gt=5).order_by('rownum')">
			<tr>
				<td tal:content="error/rownum" tal:condition="python:error.rownum>-1" />
				<td tal:condition="python:error.rownum &lt; 0">General</td>
				<td tal:content="error/message" />	
			</tr>
			</tal:errors>
		</table>
	</tal:errortable>
	
	<tal:errortable tal:condition="python:upload and len(upload.uploaderror_set.all().filter(errorlevel__lte=5))>0">
	<h2 style="border-bottom-style: none">Warnings:</h2>
	<p class="description">
	    The ﬁle import generated some warnings which are listed below. The values that triggered these 
        warnings were treated as missing. To correct these values, edit the data ﬁle and upload it again.
    </p>
		<table class="listing">
			<tr>
				<th>
					Row
				</th>
				<th>
				    Warning message
				</th>
			</tr>
			<tal:errors 
			    repeat="error python:upload.uploaderror_set.all().filter(errorlevel__lte=5).order_by('rownum')">
			<tr>
				<td tal:content="error/rownum" />
				<td tal:content="error/message" />	
			</tr>
			</tal:errors>
		</table>
	</tal:errortable>



</div>
</form>

</div>
</body>
</html>
